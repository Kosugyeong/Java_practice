package com.test.java.question.iteration3;

public class Q06 {
	public static void main(String[] args) {

		/*
		<요구사항>
		2부터 100사이의 소수를 구하시오.
		
		<조건>
		소수: 1과 자기자신으로밖에 나눠지지 않는 수
		
		<출력>
		2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97		
		
		
		
		1. 첫번째 for문에서 2부터 99까지 돌린다.
		2. 두번째 for문 시작하기 전에 count변수를 생성한다.
		3. 두번째 for문에서는 1부터 i-1까지 돌린다.
		4. 현재 숫자를 1부터 현재숫자 -1 까지 순서대로 다 나눠보고, 나머지가 0일때마다 count를 1씩 증가한다. 
		5. count가 1개이면(1로만 나눠진다는 소리이므로) 소수이다 > 출력하기
		6. 마지막에 ,를 지우기 위해 \b\b처리 해준다. 
		
		*/



		for (int i = 2; i < 100; i++) {
			int count = 0;
			for (int j = 1; j < i; j++) { // i를 1부터 i-1까지 나누는걸 반복하고 1을 제외한 다른 숫자도 나눠지면 소수가 아님. 즉,count가 1이여야만 소수.
											
				if (i % j == 0) {
					count++;
				}
			}
			if (count == 1) {
				System.out.print(i + ", ");

			}

		}
		
		System.out.println("\b\b");



	}



}



// 아래 코드는 예를 들어 i의 숫자일 때 i가 2~i-1까지 나눴는데 나머지가 0이 아닌 경우(안나눠지는 경우)를 모두 세어서 1과 자기 자신의 수를 제외했으니 i-2번
//세어지면 소수이니까 그 경우를 출력하는 방법으로 했는데 2를 위 식과 함께 처리할 방법을 찾지 못함..

// for (int i = 2; i < 100; i++) {
// int count = 0;
// for (int j = 2; j <= i; j++) {
//
// if (i % j != 0) {
//
//
// ++count;
// if (count == i - 2) {
// System.out.print(i + ", ");
//
// }
//
//
//
// }
//
// }
//
// }
